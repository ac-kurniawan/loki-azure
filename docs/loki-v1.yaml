openapi: 3.0.3
info:
  title: Loki-azure
  description: Loki-azure
  version: 1.0.0
servers:
  - url: 'http://localhost:3222'
tags:
  - name: event
    description: event domain
  - name: order
    description: order domain
paths:
  /event:
    post:
      tags:
        - event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
      responses:
        201:
          $ref: "#/components/responses/EventSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
      summary: create new event
  /event/{eventId}:
    get:
      tags:
        - event
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: event id
      responses:
        200:
          $ref: "#/components/responses/EventSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
  /event/{eventId}/schedule:
    get:
      tags:
        - event
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: event id
      responses:
        200:
          $ref: "#/components/responses/SchedulesSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
    post:
      tags:
        - event
      parameters:
        - in: path
          name: eventId
          schema:
            type: string
          required: true
          description: event id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScheduleRequest"
      responses:
        201:
          $ref: "#/components/responses/SchedulesSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
  /order:
    post:
      tags:
        - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderRequest"
      responses:
        201:
          $ref: "#/components/responses/OrderSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
  /order/{orderId}:
    get:
      tags:
        - order
      parameters:
        - in: path
          name: orderId
          schema:
            type: string
          required: true
          description: order id
      responses:
        201:
          $ref: "#/components/responses/OrderSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
  /order/checkout:
    post:
      tags:
        - order
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutRequest"
      responses:
        201:
          $ref: "#/components/responses/OrderSuccessResponse"
        500:
          $ref: "#/components/responses/ErrorDatabaseResponse"
components:
  schemas:
    CheckoutRequest:
      type: object
      properties:
        orderId:
          type: string
          example: "64463df1-ebfd-4cce-b9d8-d67a0e21d8f6"
    OrderRequest:
      type: object
      properties:
        phoneNumber:
          type: string
          example: "620000000001"
        email:
          type: string
          example: "asd@asd.id"
        scheduleId:
          type: string
          example: "363ff703-4b3b-4ec0-bd45-32e56df4e663"
        qty:
          type: number
          example: 2
    ScheduleRequest:
      type: object
      properties:
        startTime:
          type: string
          required: true
          example: "2021-02-18T21:54:42.123Z"
        endTime:
          type: string
          required: false
          example: "2021-02-20T21:54:42.123Z"
        location:
          type: string
          required: true
          example: "Pahlawan street 101"
        basePrice:
          type: integer
          required: true
          example: 100000
        promoPrice:
          type: integer
          required: false
          example: 80000
        quota:
          type: integer
          required: true
          example: 100
    EventRequest:
      type: object
      properties:
        name:
          type: string
          example: lorem
        description:
          type: string
          example: lorem ipsum dolor
        isPublished:
          type: boolean
          example: true
    EventSchema:
      type: object
      properties:
        eventId:
          type: string
          example: 13e6ceae-ad95-4413-a34f-1d5850f286c1
        name:
          type: string
          example: lorem
        description:
          type: string
          example: lorem ipsum dolor
        isPublished:
          type: boolean
          example: true
        createdAt:
          type: string
          example: "2022-05-18T16:15:45.093973+07:00"
        updatedAt:
          type: string
          example: "2022-05-18T16:15:45.093973+07:00"
    ScheduleSchema:
      type: object
      properties:
        scheduleId:
          type: string
          example: d239e068-ed98-42cf-b37a-928b65914edb
        startTime:
          type: string
          example: "2021-02-19T04:54:42.123+07:00"
        endTime:
          type: string
          example: null
        location:
          type: string
          example: "Pahlawan street 101"
        basePrice:
          type: integer
          example: 100000
        promoPrice:
          type: integer
          example: 80000
        quota:
          type: integer
          example: 100
        booked:
          type: integer
          example: 0
    OrderSchema:
      type: object
      properties:
        orderId:
          type: string
          example: 6397e8f8-ca61-4617-8d18-8ee8c2d95cd4
        phoneNumber:
          type: string
          example: "62000000001"
        email:
          type: string
          example: asd@asd.id
        status:
          type: string
          enum: [WAITING_FOR_PAYMENT, SUCCESS, TIMEOUT, CANCELED]
          example: WAITING_FOR_PAYMENT
        scheduleId:
          type: string
          example: "363ff703-4b3b-4ec0-bd45-32e56df4e663"
        qty:
          type: number
          example: 2
        createdAt:
          type: string
          example: "2022-05-24T19:58:54.849565+07:00"
        updatedAt:
          type: string
          example: "2022-05-24T19:58:54.849565+07:00"
  responses:
    OrderSuccessResponse:
      description: success response for order creation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              data:
                $ref: "#/components/schemas/OrderSchema"
    EventSuccessResponse:
      description: success response for event creation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              data:
                $ref: "#/components/schemas/EventSchema"
    SchedulesSuccessResponse:
      description: success response for order creation
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 201
              data:
                type: array
                items:
                  $ref: "#/components/schemas/ScheduleSchema"
    ErrorDatabaseResponse:
      description: error database response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: number
                example: 500
              message:
                type: string
                example: "database error"
